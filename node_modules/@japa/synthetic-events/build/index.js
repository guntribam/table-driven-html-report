"use strict";
/*
 * @japa/synthetic-events
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fire = void 0;
const tests_1 = __importDefault(require("./src/Events/tests"));
const groups_1 = __importDefault(require("./src/Events/groups"));
const suites_1 = __importDefault(require("./src/Events/suites"));
async function fire(emitter) {
    emitter.emit('runner:start', {});
    for (let suitesEvent of suites_1.default) {
        await emitter.emit('suite:start', suitesEvent[0]);
        for (let groupEvent of groups_1.default) {
            await emitter.emit('group:start', groupEvent[0]);
            for (let testEvent of tests_1.default) {
                await emitter.emit('test:start', testEvent[0]);
                await emitter.emit('test:end', testEvent[1]);
            }
            await emitter.emit('uncaught:exception', new Error('Something failed outside of test'));
            await emitter.emit('group:end', groupEvent[1]);
        }
        await emitter.emit('suite:end', suitesEvent[1]);
    }
    emitter.emit('runner:end', {
        hasError: false,
        errors: [],
    });
}
exports.fire = fire;
